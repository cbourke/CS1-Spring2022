package unl.cse.honors.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.core.config.Configurator;
import org.apache.logging.log4j.core.config.DefaultConfiguration;

public class GameDataSaver {
	
	public static final Logger LOG = LogManager.getLogger(GameDataSaver.class);
	
	static {
		//configure the logger:
		Configurator.initialize(new DefaultConfiguration());
		Configurator.setRootLevel(Level.INFO);
	}


	public static Publisher getOrInsertPublisher(Publisher p) {
		
		LOG.info("inserting publisher...");
		
		Publisher result = GameDataLoader.getPublisherByName(p);
		if(result == null) {
			
			//need to insert the publisher...
			// 1. make your connection
			String url = "jdbc:mysql://cse.unl.edu/cbourke?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
			String user = "cbourke";
			String pass = "12334";

			Connection conn;
			try {
				conn = DriverManager.getConnection(url, user, pass);
			} catch (SQLException e) {
				LOG.error("could not get connection", e);
				throw new RuntimeException(e);
			}

			// 2. prepare your query
			String query = "insert into publisher (name) values (?);";
			PreparedStatement ps;

			try {
				ps = conn.prepareStatement(query);
				ps.setString(1, p.getName());
				// execute your query:
				ps.executeUpdate();
			} catch (SQLException e) {
				System.err.println("could not get data!");
				throw new RuntimeException(e);
			}

			// 4. close your resources...
			try {
				ps.close();
				conn.close();
			} catch (SQLException e) {
				System.err.println("could not close connection");
				throw new RuntimeException(e);
			}
			
			result = GameDataLoader.getPublisherByName(p);
		}

		return result;
	}

	/**
	 * Insert the given game and returns the PK generated by the database
	 * for the record!
	 * @param g
	 * @return
	 */
	public static int insertGame(Game g) {
		
		int keyValue;
		
		//need to insert the publisher...
		// 1. make your connection
		String url = "jdbc:mysql://cse.unl.edu/cbourke?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
		String user = "cbourke";
		String pass = "1234";

		Connection conn;
		try {
			conn = DriverManager.getConnection(url, user, pass);
		} catch (SQLException e) {
			System.err.println("could not get connection");
			throw new RuntimeException(e);
		}

		// 2. prepare your query
		String query = "insert into game (name,publisherId) values (?,?);";
		PreparedStatement ps;

		try {
			ps = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
			ps.setString(1, g.getTitle());
			ps.setInt(2, g.getPublisher().getPublisherId());
			// execute your query:
			ps.executeUpdate();
			
			ResultSet keys = ps.getGeneratedKeys();
			keys.next();
			keyValue = keys.getInt(1);
			keys.close();
			
		} catch (SQLException e) {
			System.err.println("could not get data!");
			throw new RuntimeException(e);
		}

		// 4. close your resources...
		try {
			ps.close();
			conn.close();
		} catch (SQLException e) {
			System.err.println("could not close connection");
			throw new RuntimeException(e);
		}
		return keyValue;
	}

	public static void main(String args[]) {
		Publisher key = new Publisher("InnerSloth 2");
		Publisher p = getOrInsertPublisher(key);
		System.out.println(p);
		
//		Game g = new Game("Among Us", p);
//		int keyValue = insertGame(g);
//		System.out.println(keyValue);
	}
}
